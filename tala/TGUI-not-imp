
/*~custom_tala_field = TextView(~win, Rect(~custom_tala_text.bounds.width + (~margin*2),65,120,20))
						.font_(~custom_tala_field_font)
						.usesTabToFocusNextView_(false)
						.enterInterpretsSelection_(false)
						.keyUpAction_({|view,char,mod,uni,keycode|
							~resize.(keycode);
/*							"view: ".post; view.postln;*/
/*							"char: ".post; char.postln;*/
/*							"mod: ".post; mod.postln;*/
/*							"uni: ".post; uni.postln;*/
/*							"keycode: ".post; keycode.postln;*/
						});
						*/

						~custom_tala_field.bounds.width - (~custom_tala_field.string.size*GUI.stringBounds("a", Font("Monaco",12)).width)

						~one_char = GUI.stringBounds("a", Font("Monaco",12)).width;
						~num_chars = 10;

						~custom_tala_field.bounds = ~custom_tala_field.bounds.width_((~one_char*10)+10)
						~custom_tala_field.bounds.width - (~one_char*10)

						(
							~expand = {~custom_tala_field.bounds = ~custom_tala_field.bounds.height_(~custom_tala_field.bounds.height + 20)};
							~contract = {~custom_tala_field.bounds = ~custom_tala_field.bounds.height_(~custom_tala_field.bounds.height - 20)};
							~resize = {|keycode| 
							var excess 		= 10;
							var string_w 	= GUI.stringBounds(~custom_tala_field.string).width;
						/*	"excess: ".post; excess.postln;*/
						/*	"string_w: ".post; string_w.postln;*/
							if(keycode==36) {
								~expand.();
							};
							"keycode: ".post; keycode.postln;
							if(~custom_tala_field.string.size%~num_chars==0) {
								1.postln;
								if(keycode==51 && (~custom_tala_field.bounds.height!=20)) {
									2.postln;
									"contract".postln;
									~contract.();
								} {
									3.postln;
									if(~custom_tala_field.string.size!=0) {
									"expand".postln;
									~expand.();
									};
								};
							};

							if(~custom_tala_field.string.size%~num_chars==(~num_chars-1) && (keycode==51)) {
								4.postln;
								~contract.();
							};

							~custom_tala_field.focus(false);
							~custom_tala_field.focus(true);		
							~win.refresh
						};
						)

						(

						~string_width = {|string| GUI.stringBounds(string).width};
						~expand = {~custom_tala_field.bounds = ~custom_tala_field.bounds.height_(~custom_tala_field.bounds.height + ~one_char.height)};
						~contract = {~custom_tala_field.bounds = ~custom_tala_field.bounds.height_(~custom_tala_field.bounds.height - ~one_char.height)};

						~custom_tala_text_string = " Custom Tala ";

						~one_char 			= GUI.stringBounds("a", ~custom_tala_field_font);
						~n_chars			= 10;

						~win 				= Window("Tala", Rect(400,400,400,400)).front;
						~margin				= 5;
						~string_width.(~custom_tala_text_string);
						~custom_tala_text = StaticText(~win, Rect(~margin,65, ~string_width.(~custom_tala_text_string),20))
												.string_(~custom_tala_text_string)
												.stringColor_(Color.white)
												.background_(Color.grey);
						~custom_tala_field_font = Font("Monaco", 12);
						~custom_tala_field = TextView(~win, Rect(~custom_tala_text.bounds.width + (~margin*2), 65,~one_char.width*~n_chars+10,20))
												.font_(~custom_tala_field_font)
												.usesTabToFocusNextView_(false)
												.enterInterpretsSelection_(false);

						)

						(
							//Might be a better way of doing this. calculate how many rows the string takes up, then work out how many lines the box should be...
						~focus_refresh = {
							~custom_tala_field.focus(false);
							~custom_tala_field.focus(true);		
							~win.refresh
						};
						~custom_tala_field.keyDownAction = {|view, char, modifiers, unicode, keycode|
							var string_size = ~custom_tala_field.string.size;
							var ss_mod = {|val=0| string_size + val % ~n_chars == 0; };
						/*	"keycode: ".post; keycode.postln;*/
						/*	"string_size: ".post; string_size.postln;*/
							if(string_size>1) {
								if(ss_mod.() && (keycode!=51)) {
									~expand.();
									~focus_refresh.();
									"expand!".postln;
								};
								if(ss_mod.(-1) && (keycode==51)) {
									~contract.();
									~focus_refresh.();
									"contract".postln;
								};		
							} {
								~custom_tala_field.bounds = ~custom_tala_field.bounds.height_(20);
								~focus_refresh.();
							};
						}
						)

						~custom_tala_field.bounds = ~custom_tala_field.bounds.height_(20)

						//bit to work with returns...
						~custom_tala_field.string.escapeChar($\n).postln;
						x = ~custom_tala_field.string.size;
						r = ~custom_tala_field.string.count({|item,i|item==$\n});
						if(r>0) {
							y = (x-r/~num_chars).ceil + r;
						};
						y
						$\n.asString.class
						(29/10).ceil

						(
						~focus_refresh = {
							~custom_tala_field.focus(false);
							~custom_tala_field.focus(true);		
							~win.refresh
						};

						~custom_tala_field.keyUpAction = {|view, char, modifiers, unicode, keycode| 
							~gui_calc_height = (GUI.stringBounds(~custom_tala_field.string, ~custom_tala_field_font).height);
							~num_returns = ~custom_tala_field.string.count({|item,i|item==$\n});
							~size_calc_height = (~custom_tala_field.string.size-~num_returns/~n_chars).ceil+~num_returns;
							~current_line = ~custom_tala_field.string.size % ~num_chars;
							"~current_line: ".post; ~current_line.postln;
							(~custom_tala_field.string.split($\r).last).postln;
						/*	~actual_height = ~custom_tala_field.string.size - ~num_returns + ()*/
						/*	~actual_height = [~gui_calc_height, ~size_calc_height].maxItem;*/
						/*	~size_calc_height.postln;*/
							~custom_tala_field.bounds = ~custom_tala_field.bounds.height_((~size_calc_height*~one_char.height +5).max(20));

							~focus_refresh.();
						}
						)

						x = "hello
						hi
						bye";

						x.reverse.select({|item, i| i < x.reverse.ascii.indexOf(10)}).reverse




						(
							y = ~custom_tala_field.string.ascii.indicesOfEqual(10);
							z = List[];
							a = List[];	
							b = List[];
							if(y!=nil) {
								y = y.addFirst(-1);
								y.do { |item,i|
									"i: ".post; i.postln;
									if(y[i+1]!=(item+1)) {
										if(i!=(y.size-1)) {
											z.add(~custom_tala_field.string[item+1..y[i+1]-1])
										} {
											z.add(~custom_tala_field.string[item+1..~custom_tala_field.string.size-1])
										};
									};
								};
							} {
								z.add(~custom_tala_field.string)
							};


							z.do { |item, i|
								if(item.size>~num_chars) {
									a.add(item[0..~num_chars-1]);
									if(item[~num_chars].isSpace) {
										b.add(item[~num_chars+1..]);
										"adding...".postln;
									} {
										b.add(item[~num_chars..]);	
										"adding...".postln;
									};
									if(b.size>0) {
										true
									};

								} {
									a.add(item);
								};
							};
							a.size
						)


						x = List[];
						y = List[];
						~custom_tala_field.string.do { |item, i|
							var val = i%10;
							"i: ".post; i.postln;
							"val: ".post; val.postln;
							"item: ".post; item.postln;
							case
								{val==0}	{
										if(item.isSpace.not) {
											y=List[item];
										} {
											y=List[];
										};
									}
								{val<10}	{
									y.add(item);
									if(val==9 || (i==(~custom_tala_field.string.size-1))) {
										x.add(y); 
										3.postln;
									}
								};
							"y: ".post; y.postln;
							"x: ".post; x.postln;
							" ".postln;					
						};

						(~custom_tala_field.string[10].isSpace).not

						x.size
						x
						x.size

						(~custom_tala_field.string.size % 10 == 2) && ~custom_tala_field.string.last.isSpace.not

						x = "";
						y = List[];
						~last_was_space = false;
						~custom_tala_field.string.do({|item, i| 
						/*	~last_was_space.not.postln;*/
							if(item.ascii!=10) {
								if( (i%10==0 && item.isSpace).not && (~last_was_space && item.isSpace ).not) {
									"here".postln;
									x=x++item; ~last_was_space=false
								} {
									"there".postln;
									if(~last_was_space && (i%10==0)) {
										x=x++item; 
										~last_was_space =true;
										"there one".postln;

									} {
										~last_was_space = true;	
										"there two".postln;
									};

								};
								if(x.size==10) {
									y.add(x);
									x="";
								};
							} {
								if(i%10!=0) {
									y.add(x);
								};
								x="";
							}
						});

						y
						~custom_tala_field.string.reverse.select({|item, i| i < ~custom_tala_field.string.reverse.ascii.indexOf(10)}).reverse

						x.reverse.select({|item, i| i < x.reverse.ascii.indexOf(10)}).reverse

						z = "1 1232 2      23   3"
						y[0].size

						( 10%10===0 && z[10].isSpace.not ).not && (z[9].isSpace).not

						GUI
						
						
(
	{
		5.wait;
		~win.refresh
	}.fork(AppClock);

	~custom_tala_field.bounds.height_(100)
	(
	~win.close;
	~string_width 			= {|string, font| GUI.stringBounds(string, font).width};
	~one_char_bounds 		= GUI.stringBounds("a",Font("Monaco",12));
	~margin 				= 5;
	~line_height			= 20;
	~m_point 				= ~margin@~margin;
	~item_bounds			= (~one_char_bounds.width*22) + 10 @ ~line_height;
	~total_bounds			= ~item_bounds.x*2 + ~margin @ ~line_height;
	~ct_field_bounds		= ~item_bounds.x@(~one_char_bounds.height*5-5);
	~custom_tala_field_font	= Font("Monaco", 12);
	~regular_font			= if(Font.availableFonts.any{|item, i| item.asSymbol=='Cochin'}) {
									Font("Cochin",12)
								} {
									Font("Times",50)
								};


	~win 		= Window("Tala", Rect(25,400,(~total_bounds.x*2)+(~margin*4),300),false).front;
	~win.bounds
	~left_side 	= CompositeView(~win, Rect(0,0,~win.bounds.width/2, ~win.bounds.height));

	~left_dec 	= ~left_side.addFlowLayout.margin_(~m_point).gap_(~m_point/2);

	~tempo 	= EZNumber(	~left_side, 
						~item_bounds.x + ~margin + (~one_char_bounds.width*3+9) @ ~line_height,
						" Tempo ",
						ControlSpec(1,999,\lin,1,120,"bpm"),
						action:{|ezn| ("Tempo is now: " ++ ezn.value).postln},
						initVal:120,
						labelWidth:~item_bounds.x,
						gap:~m_point
			).setColors(Color.grey, Color.white);
	~left_dec.nextLine;

	~gati_pop = EZPopUpMenu( ~left_side,
							 ~total_bounds,
							 " Gati ",
							[
								'3 - Tisra'		->	{|a| "Tisra".postln;},
								'4 - Caturasra'	->	{|a| "Caturasra".postln;},
								'5 - Khanda'	->	{|a| "Khanda".postln;},
								'7 - Misra'		->	{|a| "Misra".postln;},
								'9 - Sankirna'	->	{|a| "Sankirna".postln;},
							],
							globalAction: {|a| "Global Action".postln;},
							initVal:1,
							initAction:false,
							labelWidth:~item_bounds.x,
							gap:~m_point
			).setColors(Color.grey, Color.white);

	~left_dec.nextLine;

	~tala_pop = EZPopUpMenu( ~left_side,
							 ~total_bounds,
							 ~tala_pop_string=" Tala Presets ",
							[
								'Adi' 				-> {|a| "Adi".postln},
								'Rupaka' 			-> {|a| "Rupaka".postln},
								'Khanda Chapu' 		-> {|a| "Khanda Capu".postln},
								'Misra Chapu' 		-> {|a| "Misra Capu".postln},
								'Sankeerna Chapu' 	-> {|a| "Sankeerna Capu".postln},
								'Custom Tala' 		-> {|a| "Custom Tala".postln}
							],
							globalAction: {|a| "Global Action".postln},
							initVal: 0,
							initAction: false,
							labelWidth: ~item_bounds.x,
							gap:~m_point
			).setColors(Color.grey, Color.white);
	~left_dec.nextLine;
	~custom_tala_comp = CompositeView( ~left_side, ~total_bounds.x@~ct_field_bounds.y);
	/*~custom_tala_comp.background_(Color.black)*/
	~custom_tala_comp.addFlowLayout.margin_(0@0).gap_(~margin@0).left_(~custom_tala_comp.decorator.bounds.width).top_(0);
	~custom_tala_label = StaticText(~custom_tala_comp, ~item_bounds)
							.string_(" Custom Tala ")
							.stringColor_(Color.white)
							.background_(Color.grey)
							.align_(\right);
	~custom_tala_field = TextView(~custom_tala_comp, ~ct_field_bounds)
							.font_(~custom_tala_field_font)
							.usesTabToFocusNextView_(false)
							.enterInterpretsSelection_(false)
							.hasVerticalScroller_(true)
							.autohidesScrollers_(true);
	~left_dec.nextLine;
	/*~custom_tala_comp.decorator.left=380*/
	~start_stop_routine = Routine {
		inf.do {
			"Started!".postln;
			0.yield;
			"Stopped!".postln;
			0.yield;
		};
	};

	~start_stop = Button(~left_side, ~total_bounds.x@(~win.bounds.height-~margin/2))
					.states_([
						["Start Tala", Color.black, Color.green],
						["Stop Tala", Color.white, Color.red]
					])
					.action_({|button|
						~start_stop_routine.();
					})
					.font_(~regular_font.copy.size_(60));

	~right_side 	= CompositeView(~win, Rect(~win.bounds.width/2,0,~win.bounds.width/2, ~win.bounds.height));
	~right_dec 		= ~right_side.addFlowLayout.margin_(~m_point).gap_(~m_point/2);
	~paths 			= PathName.new("/Users/arthurc/Documents/programming/computerMusic/india_tools/tala/images");
	~images 		= Array.newClear(~paths.files.size);
	~paths.files.do {|aFile, i|
	/*	~images[i] = SCImage.new(aFile.fullPath);*/
		~images[i] = TalaImage.new(aFile.fullPath)
	};

	~image_holder 	= CompositeView(~right_side, ~right_side.bounds.extent-(~margin*2)).backgroundImage_(~images[8].image,11);

	~adi 			= [~images[8],~images[0..2], ~images[8..9] ! 2].flat;
	~rupaka 		= ~images[8]!2 ++ ~images[9];
	~khanda 		= ~images[8]!3;
	~misra			= (~images[9]!2) ++ (~images[8]!2);
	~sankirna		= (~images[8]!3) ++ (~images[9]!2);

	/*~text_font		= ~regular_font.copy.size_(40);
	~text_strings	= ["Clap", "Wave", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
	~string_sizes	= Array.newClear(~text_strings.size); 
	~text_strings.do { |item, i|
		~string_sizes[i] = GUI.stringBounds(item, ~text_font).bounds;
	};
	*/
	/*~string_bounds	= ~string_sizes.maxItem({|item, a| item.width});*/
	~text_l			= (~image_holder.bounds.width/2) - (~images[8].bounds.width/2) + 28;
	~text_t			= ~image_holder.bounds.height * 0.55;
	~images[8].set_origin(~text_l@~text_t);
	~butters = StaticText(~image_holder, ~images[8].bounds)
				.string_(~images[8].string)
				.font_(~images[8].font)
				.stringColor_(~images[8].label_color);



	)
	~image_holder.backgroundImage_(~images[0].image,11)
	~images[0].string = "1"
	~butters.string = ~images[0].string
	~images[0].set_origin(0@0)
	~butters.bounds = ~images
	~images[0].bounds
	a = TalaImage.new()

	~images[0].string.class
	GUI.stringBounds("hello")
	~set_origin = {|origin|
		var l,t;
		var sPoint = GUI.stringBounds(~images[0].string, ~images[0].font).extent;
		sPoint.postln;
		if(origin!=nil) {
			l = origin.x;
			t = origin.y;
		} {
			l = 0;
			t = 0;
		};

		Rect(l, t, sPoint.x, sPoint.y);
	};
	~set_origin.(0@0)



	x = 500;
	~win = Window("hi", Rect(100,150,x,x)).front;
	a = TalaImage.new(~win, Rect(0,0,x,x));
	s.boot;

	a = Tala.new
	a.play
	itunesa.prAction(1, 0.41, 0.45)
	
)

a = TalaGUI.new